{
  "entrypoint": "index.html",
  "shell": "src/my-app.js",
  "sources": [
    "images/**/*"
  ],
  "extraDependencies": [
    "manifest.json",
    "node_modules/@webcomponents/webcomponentsjs/*.js",
    "!node_modules/@webcomponents/webcomponentsjs/gulpfile.js",
    "node_modules/@webcomponents/webcomponentsjs/bundles/*.js"
  ],
  "builds": [
    {
      "name": "esm-bundled",
      "browserCapabilities": [
        "es2015",
        "modules"
      ],
      "js": {
        "minify": true
      },
      "css": {
        "minify": true
      },
      "html": {
        "minify": true
      },
      "bundle": true,
      "addServiceWorker": true
    },
    {
      "name": "es6-bundled",
      "browserCapabilities": [
        "es2015"
      ],
      "js": {
        "minify": true,
        "transformModulesToAmd": true
      },
      "css": {
        "minify": true
      },
      "html": {
        "minify": true
      },
      "bundle": true,
      "addServiceWorker": true
    },
    {
      "name": "es5-bundled",
      "js": {
        "minify": true,
        "compile": true,
        "transformModulesToAmd": true
      },
      "css": {
        "minify": true
      },
      "html": {
        "minify": true
      },
      "bundle": true,
      "addServiceWorker": true
    }
  ],
  "moduleResolution": "node",
  "npm": true,
  "lint": {
    "rules": [
      "polymer-3"
    ]
  }
}




const columnDefs = [
  { headerName: 'ID', field: 'id', pinned: 'left', editable: true },
  { headerName: 'Name', field: 'name', editable: true },
  // Add more columns as needed
];

const gridOptions = {
  columnDefs: columnDefs,
  rowData: [],
  enableCellChangeFlash: true,
};

new agGrid.Grid(gridDiv, gridOptions);
function addPinnedRow() {
  const newRow = { id: '', name: '' }; // Define the structure of your row
  newRow['_rowPinned'] = 'top'; // Pin the row to the top
  gridOptions.api.applyTransaction({ add: [newRow] }); // Add the new row
}
// Listen for cell value changes in the pinned row
gridOptions.api.addEventListener('cellValueChanged', function (event) {
  if (event.data['_rowPinned'] === 'top') {
    // Handle changes in the pinned row's data
    const updatedData = event.api.getData();
    // ...
  }
});

